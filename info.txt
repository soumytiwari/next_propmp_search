--> npx create-next-app@latest ./
//  "./" to create the files in this particular directory

--> npm install bcrypt mongodb mongoose next-auth
//  bccrypt to hash password
//  mongodb for database
//  mongoose to help manage the database


- components folder: Here we'll keep our re-usable components
- models: for mongodb mongoose database models
- utils: for utility functions we are going to use throughout our applications
- .env: to store secure keys

>> recreated folders: public, app


-----------------------------------------------

after creation:

- ./app/page.jsx: will render our home page
--> edits
--> npm run dev: to start the server on localhost: 3000



-------------------------------------------------------------


now we're ready to start developing the project

- feed.jsx: here we are gonna show all the prompts generated
- ./app/api/auth/[...nextauth]/route.js: relative route([...xyz]), with variable parameter nextauth, used in route.js

:: every nextjs route is serverless route ==> no server is needed to access database, but connection is needed to the database
lambda function -> opens the connection to the database
- serverless -> Lambda -> dynamodb
- mongoose: helping us interact with mongodb database

-----------------------------
online cloud storage to create your storage
- mongodb.com/atlas: create-cluster, go to access, password, go to network access-> add ip address(current)
but there's an option of "0000" for ip-address => can access the database from anywhere in the world

- /models/user.js: the model on which user data will be stored